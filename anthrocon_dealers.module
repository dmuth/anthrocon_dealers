<?php
/**
* Anthrocon dealers module.
*
* This module holds dealer and Dealer Room staff-specific functionality.
*/


/**
* Return an array of permissions for this module.
*/
function anthrocon_dealers_perm() {
	$retval = array("view dealer table sales");
	return($retval);
}


/**
* Return an array of menu options.
*/
function anthrocon_dealers_menu() {

	$retval = array();

	$retval["admin/dealer"] = array(
		"title" => "View Dealer Tables",
		"page callback" => "anthrocon_dealers_main",
		"access arguments" => array("view dealer table sales"),
		);

	return($retval);

} // End of anthrocon_dealers_menu()


/**
* Our main page.
*/
function anthrocon_dealers_main() {

	$retval = "";

	$retval .= drupal_get_form("anthrocon_dealers_form");

	$rows = anthrocon_dealers_get_tables_sold();
	$retval .= anthrocon_dealers_get_tables_sold_html($rows);
	//$retval .= "<pre>" . print_r($rows, true) . "</pre>"; // Debugging

	return($retval);

} // End of anthrocon_dealers_main()


/**
* Generate our form for viewing/downloading dealer tables.
*/
function anthrocon_dealers_form() {

	$retval = array();

	$retval["tables"] = array(
		"#type" => "fieldset",
		"#title" => t("Dealer Tables"),
		);

	$retval["tables"]["download"] = array(
		"#type" => "submit",
		"#value" => t("Download This List"),
		);

	return($retval);

} // End of anthrocon_dealers_form()


/**
* Our form submission handler.
*/
function anthrocon_dealers_form_submit($form, $form_state) {

	//
	// What button did we click?
	// We'll need this if we add more buttons later.
	//
	$op = $form_state["values"]["op"];

	//
	// Retrieve our current tables sold.
	//
	$rows = anthrocon_dealers_get_tables_sold();

	//
	// Get tab-delimited text
	//
	$text = anthrocon_dealers_get_tables_sold_text($rows);

// TEST
print "<pre>";
print $text;

} // End of anthrocon_dealers_submit()


/**
* Get current dealer tables that have been sold.
*
* @param integer $limit an optional limit. This is used for testing/development.
*
* @return array An array of sold tables.
*/
function anthrocon_dealers_get_tables_sold($limit = "") {

	$retval = array();

	//
	// Hard-coded to the NID of the dealers table
	//
	$nid = 6135;

	$sql_limit = "";
	if (!empty($limit)) {
		$sql_limit = "LIMIT " . intval($limit);
	}

	$query = "SELECT "
		. "orders.*, "
		. "order_products.* "
		. "FROM "
		. "uc_orders AS orders "
		. "JOIN uc_order_products AS order_products "
			. "ON order_products.order_id = orders.order_id "
		. "WHERE "
		. "order_products.nid = '%s' "
		. "AND orders.order_status != 'canceled' "
		. "AND orders.order_status != 'in_checkout' "
		. "ORDER BY "
		. "orders.order_id ASC "
		. $sql_limit
		;
	$query_args = array($nid);
	$cursor = db_query($query, $query_args);
	while ($row = db_fetch_array($cursor)) {
		anthrocon_dealers_process_order_data($row);
		$retval[] = $row;
	}

	return($retval);

} // End of anthrocon_dealers_get_tables_sold()


/**
* Process the data field in each order, which is a serialized string of 
* option data for each order.
*
* I have NO idea why the Ubercart people stored stuff this way...
*
* @param array $row The current row we're processing.  It is passed by 
*	reference and its "data" key is updated.
*/
function anthrocon_dealers_process_order_data(&$row) {

	$tmp = unserialize($row["data"]);
	foreach ($tmp["attributes"] as $key => $value) {

		$new_key = "attribute-" . $key;
		$row[$new_key] = $value[0];

	}

	//
	// We don't need this anymore.
	//
	unset($row["data"]);

} // End of anthrocon_dealers_process_order_data()


/**
* Theme up our sold tables in HTML tables.
*
* @param array $data An array of rows
*
* @return string HTML code
*/
function anthrocon_dealers_get_tables_sold_html($data) {

	$retval = "";

	$header = array(t("Order ID"), t("Cost"), t("Name"), t("Dealership"));
	$rows = array();
	$attributes = array();

	foreach ($data as $key => $value) {
		$row = array();
		$row[] = array("align" => "right", "data" => $value["order_id"]);
		$row[] = array(
			"align" => "right",
			"data" => "$" . number_format($value["order_total"], 2)
			);
		$row[] = $value["billing_first_name"] 
			. " " . $value["billing_last_name"];
		$row[] = $value["attribute-Name of Dealership"];

		$rows[] = $row;

	}

	$retval = theme("table", $header, $rows, $attributes);

	return($retval);

} // End of anthrocon_dealers_get_tables_sold_html()


/**
* Convert the list of dealer tables into tab-delimited text.
*
* @param array $rows An array of rows of dealer tables.
*
* @return string tab-delimited text, with a header.
*/
function anthrocon_dealers_get_tables_sold_text($rows) {

	$retval = "";

	//
	// Our column delimiter
	//
	$delimiter = "\t";

	//
	// Our row delimiter.
	//
	$end = "\r\n";

	foreach ($rows as $key => $value) {

		$line = "";

		//
		// First time around?  Generate our header row.
		//
		if (empty($retval)) {
			$retval .= join($delimiter, array_keys($value)) . $end;
		}

		//
		// Now grab the values for this row.
		//
		$retval .= join($delimiter, array_values($value)) . $end;

	}

	return($retval);

} // End of anthrocon_dealers_get_tables_sold_text()


